name: ci

on:
  push:
    # Branches that sound like default
    branches:
      - master
      - crates-io
    tags:
      - '[0-9]+.[0-9]+.[0-9]+rc[0-9]+'
      - '[0-9]+.[0-9]+.[0-9]+'
    # Don't run tests, when only textfiles were modified
    paths-ignore:
      - "COPYRIGHT"
      - "LICENSE-*"
      - "**.md"
      - "**.txt"
  pull_request:
    branches:
      - master
      - crates-io
    paths-ignore:
      - "COPYRIGHT"
      - "LICENSE-*"
      - "**.md"
      - "**.txt"

jobs:
  style:
    name: Code format and lints
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings
  build_and_test:
    name: Unit tests
    runs-on: ubuntu-latest 
    steps:
      - uses: actions/checkout@v2
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --release

  create-release:
    # create release on tags
    if: startsWith(github.ref, 'refs/tags/')
    # once unit tests have passed
    needs: build_and_test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: taiki-e/github-actions/install-rust@main
        with:
          toolchain: stable
      - run: cargo package
      - uses: taiki-e/create-gh-release-action@v1
        with:
          title: $version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  upload-assets:
    # upload binaries on linux, mac and windows
    name: Upload binary on ${{ matrix.target }}
    needs: create-release
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
          - target: x86_64-unknown-linux-musl
    runs-on: ${{ matrix.os || 'ubuntu-latest' }}
    steps:
      - uses: actions/checkout@v2
      - uses: taiki-e/github-actions/install-rust@main
        with:
          toolchain: stable
      - uses: taiki-e/upload-rust-binary-action@v1
        with:
          bin: omics_valid
          target: ${{ matrix.target }}
          tar: all
          zip: windows
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CARGO_PROFILE_RELEASE_LTO: true
